    private void addEncryptionOptions(SimpleDataSet result, Field f)
    {
        Preconditions.checkArgument(EncryptionOptions.class.isAssignableFrom(f.getType()));

        EncryptionOptions value = (EncryptionOptions) getValue(f);
        result.row(f.getName() + "_enabled").column(VALUE, Boolean.toString(value.isEnabled()));
        result.row(f.getName() + "_algorithm").column(VALUE, value.algorithm);
        result.row(f.getName() + "_protocol").column(VALUE, value.protocol);
        result.row(f.getName() + "_cipher_suites").column(VALUE, value.cipher_suites.toString());
        result.row(f.getName() + "_client_auth").column(VALUE, Boolean.toString(value.require_client_auth));
        result.row(f.getName() + "_endpoint_verification").column(VALUE, Boolean.toString(value.require_endpoint_verification));
        result.row(f.getName() + "_optional").column(VALUE, Boolean.toString(value.isOptional()));

        if (value instanceof EncryptionOptions.ServerEncryptionOptions)
        {
            EncryptionOptions.ServerEncryptionOptions server = (EncryptionOptions.ServerEncryptionOptions) value;
            result.row(f.getName() + "_internode_encryption").column(VALUE, server.internode_encryption.toString());
            result.row(f.getName() + "_legacy_ssl_storage_port").column(VALUE, Boolean.toString(server.enable_legacy_ssl_storage_port));
        }
    }

