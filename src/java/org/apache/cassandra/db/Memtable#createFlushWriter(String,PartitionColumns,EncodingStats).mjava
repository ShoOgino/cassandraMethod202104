    @SuppressWarnings("resource") // log and writer closed by SSTableTxnWriter
    public SSTableTxnWriter createFlushWriter(String filename,
                                              PartitionColumns columns,
                                              EncodingStats stats)
    {
        // we operate "offline" here, as we expose the resulting reader consciously when done
        // (although we may want to modify this behaviour in future, to encapsulate full flush behaviour in LifecycleTransaction)
        LifecycleTransaction txn = null;
        try
        {
            txn = LifecycleTransaction.offline(OperationType.FLUSH);
            MetadataCollector sstableMetadataCollector = new MetadataCollector(cfs.metadata.comparator)
                    .commitLogIntervals(new IntervalSet(commitLogLowerBound.get(), commitLogUpperBound.get()));

            return new SSTableTxnWriter(txn,
                                        cfs.createSSTableMultiWriter(Descriptor.fromFilename(filename),
                                                                     partitions.size(),
                                                                     ActiveRepairService.UNREPAIRED_SSTABLE,
                                                                     sstableMetadataCollector,
                                                                     new SerializationHeader(true, cfs.metadata, columns, stats),
                                                                     txn));
        }
        catch (Throwable t)
        {
            if (txn != null)
                txn.close();
            throw t;
        }
    }

