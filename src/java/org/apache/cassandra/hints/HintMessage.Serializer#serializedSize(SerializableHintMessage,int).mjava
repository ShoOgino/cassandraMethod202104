        public long serializedSize(SerializableHintMessage obj, int version)
        {
            if (obj instanceof HintMessage)
            {
                HintMessage message = (HintMessage) obj;

                Objects.requireNonNull(message.hint); // we should never *send* a HintMessage with null hint

                long size = UUIDSerializer.serializer.serializedSize(message.hostId, version);
                long hintSize = Hint.serializer.serializedSize(message.hint, version);
                size += TypeSizes.sizeofUnsignedVInt(hintSize);
                size += hintSize;

                return size;
            }
            else if (obj instanceof Encoded)
            {
                Encoded message = (Encoded) obj;

                if (version != message.version)
                    throw new IllegalArgumentException("serializedSize() called with non-matching version " + version);

                long size = UUIDSerializer.serializer.serializedSize(message.hostId, version);
                size += TypeSizes.sizeofUnsignedVInt(message.hint.remaining());
                size += message.hint.remaining();
                return size;
            }
            else
            {
                throw new IllegalStateException("Unexpected type: " + obj);
            }
        }

