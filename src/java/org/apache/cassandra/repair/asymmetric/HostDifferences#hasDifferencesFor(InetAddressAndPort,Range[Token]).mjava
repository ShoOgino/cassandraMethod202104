    /**
     * Does this instance have differences for range with node2?
     */
    public boolean hasDifferencesFor(InetAddressAndPort node2, Range<Token> range)
    {
        NavigableSet<Range<Token>> differences = get(node2);

        if (differences.size() > 0 && differences.last().isWrapAround() && differences.last().intersects(range))
            return true;

        for (Range<Token> unwrappedRange : range.unwrap())
        {
            Range<Token> startKey = differences.floor(unwrappedRange);
            Iterator<Range<Token>> iter = startKey == null ? differences.iterator() : differences.tailSet(startKey, true).iterator();

            while (iter.hasNext())
            {
                Range<Token> diff = iter.next();
                // if the other node has a diff for this range, we know they are not equal.
                if (unwrappedRange.equals(diff) || unwrappedRange.intersects(diff))
                    return true;
                if (unwrappedRange.right.compareTo(diff.left) < 0 && !unwrappedRange.isWrapAround())
                    break;
            }
        }
        return false;
    }

