        public IntersectingIterator(Range<Token> range)
        {
            Range<Token> startKey = byStart.floorKey(range);
            tailIterator = startKey == null ? byStart.entrySet().iterator() :
                                              byStart.tailMap(startKey, true).entrySet().iterator();
            Range<Token> last = byStart.isEmpty() ? null : byStart.lastKey();
            if (last != null && last.isWrapAround() && last.intersects(range))
                shouldReturnLast = true;
            this.range = range;
        }

