    private Slices makeSlices()
    {
        int pos = 0;
        Slices.Builder builder = new Slices.Builder(metadata.comparator);
        while (pos <= KEY_RANGE)
        {
            int skip = rand.nextInt(KEY_RANGE / 10) * (rand.nextInt(3) + 2 / 3); // increased chance of getting 0
            pos += skip;
            int sz = rand.nextInt(KEY_RANGE / 10) + (skip == 0 ? 1 : 0);    // if start is exclusive need at least sz 1
            Clustering<ByteBuffer> start = clustering(pos);
            pos += sz;
            Clustering<ByteBuffer> end = clustering(pos);
            Slice slice = Slice.make(skip == 0 ? exclusiveStartOf(start) : inclusiveStartOf(start), inclusiveEndOf(end));
            builder.add(slice);
        }
        return builder.build();
    }

