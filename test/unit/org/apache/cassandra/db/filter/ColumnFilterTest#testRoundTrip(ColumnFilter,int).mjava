    private void testRoundTrip(ColumnFilter columnFilter, int version)
    {
        try
        {
            DataOutputBuffer output = new DataOutputBuffer();
            serializer.serialize(columnFilter, output, version);
            Assert.assertEquals(serializer.serializedSize(columnFilter, version), output.position());
            DataInputPlus input = new DataInputBuffer(output.buffer(), false);
            ColumnFilter deserialized = serializer.deserialize(input, version, metadata);

            if (!clusterMinVersion.equals("4.0") || version != MessagingService.VERSION_30 || !columnFilter.fetchAllRegulars)
            {
                Assert.assertEquals(deserialized, columnFilter);
            }
            else
            {
                Assert.assertEquals(deserialized.fetched, metadata.regularAndStaticColumns());
            }
        }
        catch (IOException e)
        {
            throw Throwables.cleaned(e);
        }
    }

