    @Test
    public void testSizeMetric()
    {
        Keyspace keyspace = Keyspace.open("Keyspace1");
        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore("Standard2");
        cfs.disableAutoCompaction();

        cfs.truncateBlocking();

        Util.spinAssertEquals(0L, cfs.metric.liveDiskSpaceUsed::getCount, 30);
        Util.spinAssertEquals(0L, cfs.metric.totalDiskSpaceUsed::getCount, 30);

        for (int j = 0; j < 10; j++)
        {
            applyMutation(cfs.metadata, String.valueOf(j), ByteBufferUtil.EMPTY_BYTE_BUFFER, FBUtilities.timestampMicros());
        }
        cfs.forceBlockingFlush();
        Collection<SSTableReader> sstables = cfs.getLiveSSTables();
        long size = 0;
        for (SSTableReader reader : sstables)
        {
            size += reader.bytesOnDisk();
        }

        // size metrics should show the sum of all SSTable sizes
        assertEquals(size, cfs.metric.liveDiskSpaceUsed.getCount());
        assertEquals(size, cfs.metric.totalDiskSpaceUsed.getCount());

        cfs.truncateBlocking();

        // after truncate, size metrics should be down to 0
        Util.spinAssertEquals(0L, cfs.metric.liveDiskSpaceUsed::getCount, 30);
        Util.spinAssertEquals(0L, cfs.metric.totalDiskSpaceUsed::getCount, 30);

        cfs.enableAutoCompaction();
    }

