    @Override
    public Config loadConfig() throws ConfigurationException
    {
        Config config = super.loadConfig();

        String sep = File.pathSeparator;

        assert offset < 2000;
        config.native_transport_port += offset;
        if (config.native_transport_port_ssl != null)
            config.native_transport_port_ssl += offset;
        config.storage_port += offset;
        config.ssl_storage_port += offset;

        //Rewrite the seed ports string
        String[] hosts = config.seed_provider.parameters.get("seeds").split(",", -1);
        String rewrittenSeeds = Joiner.on(", ").join(Arrays.stream(hosts).map(host -> {
            StringBuilder sb = new StringBuilder();
            try
            {
                InetAddressAndPort address = InetAddressAndPort.getByName(host.trim());
                if (address.address instanceof Inet6Address)
                {
                     sb.append('[').append(address.address.getHostAddress()).append(']');
                }
                else
                {
                    sb.append(address.address.getHostAddress());
                }
                sb.append(':').append(address.port + offset);
                return sb.toString();
            }
            catch (UnknownHostException e)
            {
                throw new ConfigurationException("Error in OffsetAwareConfigurationLoader reworking seed list", e);
            }
        }).collect(Collectors.toList()));
        config.seed_provider.parameters.put("seeds", rewrittenSeeds);

        config.commitlog_directory += sep + offset;
        config.saved_caches_directory += sep + offset;
        config.hints_directory += sep + offset;

        config.cdc_raw_directory += sep + offset;

        for (int i = 0; i < config.data_file_directories.length; i++)
            config.data_file_directories[i] += sep + offset;

        if (config.local_system_data_file_directory != null)
            config.local_system_data_file_directory += sep + offset;

        return config;
    }

