    @Test
    public void testChunkExhausted()
    {
        final int size = BufferPool.NORMAL_CHUNK_SIZE / 64; // 1kbit
        int[] sizes = new int[128];
        Arrays.fill(sizes, size);

        int sum = 0;
        List<ByteBuffer> buffers = new ArrayList<>(sizes.length);
        for (int i = 0; i < sizes.length; i++)
        {
            ByteBuffer buffer = bufferPool.get(sizes[i], BufferType.OFF_HEAP);
            assertNotNull(buffer);
            assertTrue(buffer.capacity() >= sizes[i]);
            buffers.add(buffer);

            sum += buffer.capacity();
        }

        // else the test will fail, adjust sizes as required
        assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE);

        BufferPool.Chunk chunk = bufferPool.unsafeCurrentChunk();
        assertNotNull(chunk);

        for (int i = 0; i < sizes.length; i++)
        {
            bufferPool.put(buffers.get(i));
        }

        assertEquals(null, bufferPool.unsafeCurrentChunk());
        assertEquals(0, chunk.free());
    }

