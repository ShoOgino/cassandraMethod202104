    @Test
    public void testDenormalize3()
    {
        // test when there are multiple existing incoming ranges and the new incoming overlaps some and contains some
        StreamFromOptions dummy = new StreamFromOptions(null, range(0, 100));
        StreamFromOptions dummy2 = new StreamFromOptions(null, range(200, 300));
        StreamFromOptions dummy3 = new StreamFromOptions(null, range(500, 600));
        RangeMap<StreamFromOptions> incoming = new RangeMap<>();
        incoming.put(range(0, 100), dummy);
        incoming.put(range(200, 300), dummy2);
        incoming.put(range(500, 600), dummy3);
        Set<Range<Token>> expectedNewInput = Sets.newHashSet(range(50, 100), range(100, 200), range(200, 300), range(300, 350));
        Set<Range<Token>> expectedIncomingKeys = Sets.newHashSet(range(0, 50), range(50, 100), range(200, 300), range(500, 600));
        Set<Range<Token>> newInput = RangeDenormalizer.denormalize(range(50, 350), incoming);
        assertEquals(expectedNewInput, newInput);
        assertEquals(expectedIncomingKeys, incoming.keySet());
    }

