    /**
     * Tests range merging with a multinode cluster when the token ranges overlap between replicas.
     */
    @Test
    public void testMultiNodeWithDiscontinuousRanges()
    {
        new TokenUpdater().withTokens("127.0.0.1", 10, 40, 70)
                          .withTokens("127.0.0.2", 20, 50, 80)
                          .withTokens("127.0.0.3", 30, 60, 90)
                          .update();

        // with CL=ANY the ranges are fully merged (unless they are wrapping)
        testMultiNodeFullMerge(ANY);

        // with CLs requiring a single node the ranges are merged in a per-node basis
        for (ConsistencyLevel cl : Arrays.asList(ONE, LOCAL_ONE))
        {
            testRanges(cl,
                       range(min(), min()), // full range
                       range(min(), max(20)),
                       range(max(20), max(40)),
                       range(max(40), max(60)),
                       range(max(60), max(80)),
                       range(max(80), min()));
            testRanges(cl,
                       range(min(), max(25)),
                       range(min(), max(20)), range(max(20), max(25)));
            testRanges(cl,
                       range(min(), max(40)),
                       range(min(), max(20)), range(max(20), max(40)));
            testRanges(cl,
                       range(min(), max(50)),
                       range(min(), max(20)), range(max(20), max(40)), range(max(40), max(50)));
            testRanges(cl,
                       range(max(20), max(30)));
            testRanges(cl,
                       range(max(25), min()),
                       range(max(25), max(40)), range(max(40), max(60)), range(max(60), max(80)), range(max(80), min()));
            testRanges(cl,
                       range(max(25), max(35)));
            testRanges(cl,
                       range(max(50), min()),
                       range(max(50), max(70)), range(max(70), max(90)), range(max(90), min()));
            testRanges(cl,
                       range(max(50), max(10)), // wrapping range
                       range(max(50), max(70)), range(max(70), max(90)), range(max(90), min()), range(min(), max(10)));
            testRanges(cl,
                       range(max(25), max(15)), // wrapping range
                       range(max(25), max(40)),
                       range(max(40), max(60)),
                       range(max(60), max(80)),
                       range(max(80), min()),
                       range(min(), max(15)));
        }

        // with other CLs the ranges are not merged at all
        for (ConsistencyLevel cl : Arrays.asList(ALL, QUORUM, LOCAL_QUORUM, EACH_QUORUM, TWO, THREE, SERIAL, LOCAL_SERIAL))
        {
            testMultiNodeNoMerge(cl);
        }
    }

