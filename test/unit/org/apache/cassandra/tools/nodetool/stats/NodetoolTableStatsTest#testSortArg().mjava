    @Test
    public void testSortArg()
    {
        Pattern regExp = Pattern.compile("((?m)Table: .*$)");

        Arrays.asList("-s", "--sort").forEach(arg -> {
            ToolResult tool = ToolRunner.invokeNodetool("tablestats", arg, "table_name");
            Matcher m = regExp.matcher(tool.getStdout());
            ArrayList<String> orig = new ArrayList<>();
            while (m.find())
                orig.add(m.group(1));

            tool = ToolRunner.invokeNodetool("tablestats", arg, "sstable_count");
            m = regExp.matcher(tool.getStdout());
            ArrayList<String> sorted = new ArrayList<>();
            while (m.find())
                sorted.add(m.group(1));

            assertNotEquals(argFormat(arg), orig, sorted);
            Collections.sort(orig);
            Collections.sort(sorted);
            assertEquals(argFormat(arg), orig, sorted);
            assertTrue(argFormat(arg), tool.getCleanedStderr().isEmpty());
            assertEquals(0, tool.getExitCode());
        });

        ToolResult tool = ToolRunner.invokeNodetool("tablestats", "-s", "wrongSort");
        assertThat(tool.getStdout(), CoreMatchers.containsString("argument for sort must be one of"));
        tool.assertCleanStdErr();
        assertEquals(1, tool.getExitCode());
    }

