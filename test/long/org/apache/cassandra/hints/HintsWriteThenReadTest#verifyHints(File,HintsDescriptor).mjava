    private void verifyHints(File directory, HintsDescriptor descriptor)
    {
        long baseTimestamp = descriptor.timestamp;
        int index = 0;

        try (HintsReader reader = HintsReader.open(new File(directory, descriptor.fileName())))
        {
            for (HintsReader.Page page : reader)
            {
                Iterator<Hint> hints = page.hintsIterator();
                while (hints.hasNext())
                {
                    Hint hint = hints.next();

                    long timestamp = baseTimestamp + index;
                    Mutation mutation = hint.mutation;

                    assertEquals(timestamp, hint.creationTime);
                    assertEquals(dk(bytes(index)), mutation.key());

                    Row row = mutation.getPartitionUpdates().iterator().next().iterator().next();
                    assertEquals(1, Iterables.size(row.cells()));
                    assertEquals(bytes(index), toByteBuffer(row.clustering().get(0)));
                    Cell<?> cell = row.cells().iterator().next();
                    assertNotNull(cell);
                    assertEquals(bytes(index), toByteBuffer(cell.value()));
                    assertEquals(timestamp * 1000, cell.timestamp());

                    index++;
                }
            }
        }

        assertEquals(index, HINTS_COUNT);
    }

