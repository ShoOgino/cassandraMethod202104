    /**
     * Upgrades a node from 2.2 to 3.x and DROP COMPACT just after the upgrade but _before_ upgrading the underlying
     * sstables.
     *
     * <p>This test reproduces the issue from CASSANDRA-15897.
     */
    public void dropCompactStorageBeforeUpgradeSstables(Versions.Major upgradeTo) throws Throwable
    {
        new TestCase()
        .nodes(1)
        .upgrade(Versions.Major.v22, upgradeTo)
        .withConfig(config -> config.with(GOSSIP, NETWORK, NATIVE_PROTOCOL))
        .setup((cluster) -> {
            cluster.schemaChange("CREATE TABLE " + KEYSPACE + ".tbl (id int, ck int, v int, PRIMARY KEY (id, ck)) WITH COMPACT STORAGE");
            for (int i = 0; i < 5; i++)
                cluster.coordinator(1).execute("INSERT INTO "+KEYSPACE+".tbl (id, ck, v) values (1, ?, ?)", ConsistencyLevel.ALL, i, i);
            cluster.get(1).flush(KEYSPACE);
        })
        .runAfterNodeUpgrade((cluster, node) -> {
            Throwable thrown = catchThrowable(() -> cluster.schemaChange("ALTER TABLE "+KEYSPACE+".tbl DROP COMPACT STORAGE"));
            assertThat(thrown).hasMessageContainingAll("Cannot DROP COMPACT STORAGE as some nodes in the cluster",
                                                       "has some non-upgraded 2.x sstables");

            assertThat(cluster.get(1).nodetool("upgradesstables")).isEqualTo(0);
            Thread.sleep(1000);
            cluster.schemaChange("ALTER TABLE "+KEYSPACE+".tbl DROP COMPACT STORAGE");
            cluster.coordinator(1).execute("SELECT * FROM "+KEYSPACE+".tbl", ConsistencyLevel.ALL);
        })
        .run();
    }

