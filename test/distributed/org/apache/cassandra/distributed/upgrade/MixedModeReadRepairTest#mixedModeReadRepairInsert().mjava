    /**
     * Test that queries repair rows that have been inserted in one replica only.
     * The insertion can be either in the upgraded or in the not-upgraded node.
     */
    @Test
    public void mixedModeReadRepairInsert() throws Throwable
    {
        // rows for columns (k, c, v)
        Object[] row1 = row(0, 1, 10);
        Object[] row2 = row(0, 2, 20);

        allSingleNodeUpgrades()
        .setup(c -> c.schemaChange(withKeyspace("CREATE TABLE %s.t (k int, c int, v int, PRIMARY KEY (k, c))")))
        .runAfterClusterUpgrade(cluster -> {

            // insert rows internally in each node
            String insert = withKeyspace("INSERT INTO %s.t (k, c, v) VALUES (?, ?, ?)");
            cluster.get(1).executeInternal(insert, row1);
            cluster.get(2).executeInternal(insert, row2);

            // query to trigger read repair
            String query = withKeyspace("SELECT * FROM %s.t");
            assertRows(cluster.get(1).executeInternal(query), row1);
            assertRows(cluster.get(2).executeInternal(query), row2);
            assertRows(cluster.coordinator(2).execute(query, ConsistencyLevel.ALL), row1, row2);
            assertRows(cluster.get(1).executeInternal(query), row1, row2);
            assertRows(cluster.get(2).executeInternal(query), row1, row2);
        })
        .run();
    }

