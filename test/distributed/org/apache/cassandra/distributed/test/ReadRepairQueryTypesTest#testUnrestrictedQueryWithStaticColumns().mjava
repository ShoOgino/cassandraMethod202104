    /**
     * Test range queries on a table with static columns.
     */
    @Test
    public void testUnrestrictedQueryWithStaticColumns()
    {
        tester("")
        .createTable("CREATE TABLE %s (k int, s1 int static, s2 int static, c int, PRIMARY KEY(k, c))")
        .mutate("INSERT INTO %s (k, s1, s2) VALUES (1, 10, 100)",
                "INSERT INTO %s (k, c) VALUES (1, 1)",
                "INSERT INTO %s (k, c) VALUES (1, 2)",
                "INSERT INTO %s (k, s1, s2) VALUES (2, 10, 100)")
        .queryColumns("s1", paging ? 3 : 2, 2,
                      rows(row(10), row(10), row(10)),
                      rows(row(1, 1, 10, 100), row(1, 2, 10, 100), row(2, null, 10, 100)),
                      rows(row(1, 1, 10, null), row(1, 2, 10, null), row(2, null, 10, null)))
        .deleteColumn("DELETE s1 FROM %s WHERE k=1", "s2", 0, 1,
                      rows(row(100), row(100), row(100)),
                      rows(row(1, 1, null, 100), row(1, 2, null, 100), row(2, null, 10, 100)),
                      rows(row(1, 1, 10, 100), row(1, 2, 10, 100), row(2, null, 10, 100)))
        .deleteRows("DELETE FROM %s WHERE k=1 AND c=1", 1,
                    rows(row(1, 2, null, 100), row(2, null, 10, 100)),
                    rows(row(1, 1, null, 100), row(1, 2, null, 100), row(2, null, 10, 100)))
        .deleteRows("DELETE FROM %s WHERE k=1", 1,
                    rows(row(2, null, 10, 100)),
                    rows(row(1, 2, null, 100), row(2, null, 10, 100)))
        .tearDown(0,
                  rows(row(2, null, 10, 100)),
                  rows(row(2, null, 10, 100)));
    }

