    /**
     * Test queries with an IN restriction and a row filter on one of the selected columns without clustering columns.
     */
    @Test
    public void testInQueryWithFilterOnSelectedColumnOnSkinnyTable()
    {
        tester("WHERE k IN (1, 3) AND a=10 ALLOW FILTERING")
        .createTable("CREATE TABLE %s (k int PRIMARY KEY, a int, b int)")
        .mutate("INSERT INTO %s (k, a, b) VALUES (1, 10, 100)",
                "INSERT INTO %s (k, a, b) VALUES (2, 10, 200)",
                "INSERT INTO %s (k, a, b) VALUES (3, 10, 300)",
                "INSERT INTO %s (k, a, b) VALUES (4, 40, 400)")
        .queryColumns("a", 2, 2,
                      rows(row(10), row(10)),
                      rows(row(1, 10, 100), row(3, 10, 300)),
                      rows(row(1, 10, null), row(3, 10, null)))
        .deleteColumn("DELETE b FROM %s WHERE k=1", "a", 0, 1,
                      rows(row(10), row(10)),
                      rows(row(1, 10, null), row(3, 10, 300)),
                      rows(row(1, 10, 100), row(3, 10, 300)))
        .deleteRows("DELETE FROM %s WHERE k=1", 1,
                    rows(row(3, 10, 300)),
                    rows(row(1, 10, null), row(3, 10, 300)))
        .tearDown(2,
                  rows(row(2, 10, 200), row(4, 40, 400), row(3, 10, 300)),
                  rows(row(3, 10, 300)));
    }

