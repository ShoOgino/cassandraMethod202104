    /**
     * Test queries with an IN restriction and a row filter on one of the selected columns with clustering columns.
     */
    @Test
    public void testInQueryWithFilterOnSelectedColumnOnWideTable()
    {
        tester("WHERE k IN (1, 3) AND a=100 ALLOW FILTERING")
        .createTable("CREATE TABLE %s (k int, c int, a int, b int, PRIMARY KEY(k, c))")
        .mutate("INSERT INTO %s (k, c, a, b) VALUES (1, 10, 100, 1000)",
                "INSERT INTO %s (k, c, a, b) VALUES (2, 20, 100, 2000)",
                "INSERT INTO %s (k, c, a, b) VALUES (3, 30, 100, 3000)",
                "INSERT INTO %s (k, c, a, b) VALUES (4, 40, 400, 4000)")
        .queryColumns("a", 2, 2,
                      rows(row(100), row(100)),
                      rows(row(1, 10, 100, 1000), row(3, 30, 100, 3000)),
                      rows(row(1, 10, 100, null), row(3, 30, 100, null)))
        .deleteColumn("DELETE b FROM %s WHERE k=1 AND c=10", "a", 0, 1,
                      rows(row(100), row(100)),
                      rows(row(1, 10, 100, null), row(3, 30, 100, 3000)),
                      rows(row(1, 10, 100, 1000), row(3, 30, 100, 3000)))
        .deleteRows("DELETE FROM %s WHERE k=1", 1,
                    rows(row(3, 30, 100, 3000)),
                    rows(row(1, 10, 100, null), row(3, 30, 100, 3000)))
        .tearDown(2,
                  rows(row(2, 20, 100, 2000), row(4, 40, 400, 4000), row(3, 30, 100, 3000)),
                  rows(row(3, 30, 100, 3000)));
    }

