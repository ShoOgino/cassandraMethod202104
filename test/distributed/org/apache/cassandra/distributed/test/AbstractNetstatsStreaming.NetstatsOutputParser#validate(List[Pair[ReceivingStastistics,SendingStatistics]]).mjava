        public static void validate(List<Pair<ReceivingStastistics, SendingStatistics>> result)
        {
            List<SendingStatistics> sendingStatistics = result.stream().map(pair -> pair.right).collect(toList());

            if (sendingStatistics.size() >= 2)
            {
                for (int i = 0; i < sendingStatistics.size() - 1; i++)
                {
                    SendingStatistics.SendingHeader header1 = sendingStatistics.get(i).sendingHeader;
                    SendingStatistics.SendingHeader header2 = sendingStatistics.get(i + 1).sendingHeader;

                    if (header1 != null && header2 != null)
                    {
                        Assert.assertTrue(header1.compareTo(header2) <= 0);
                    }
                }
            }

            for (SendingStatistics sending : sendingStatistics)
            {
                if (sending.sendingHeader != null)
                {
                    Assert.assertEquals(sending.sendingHeader.bytesTotalSoFar, (long) sending.sendingSSTable.stream().map(table -> table.bytesSent).reduce(Long::sum).orElse(0L));
                    Assert.assertTrue(sending.sendingHeader.bytesTotal >= sending.sendingSSTable.stream().map(table -> table.bytesInTotal).reduce(Long::sum).orElse(0L));

                    if (sending.sendingHeader.bytesTotalSoFar != 0)
                    {
                        double progress = (double) sending.sendingSSTable.stream().map(table -> table.bytesSent).reduce(Long::sum).orElse(0L) / (double) sending.sendingHeader.bytesTotal;

                        Assert.assertTrue((int) sending.sendingHeader.progressBytes >= (int) (progress * 100));

                        Assert.assertTrue((double) sending.sendingHeader.bytesTotal >= (double) sending.sendingSSTable.stream().map(table -> table.bytesInTotal).reduce(Long::sum).orElse(0L));
                    }
                }
            }

            List<ReceivingStastistics> receivingStastistics = result.stream().map(pair -> pair.left).collect(toList());

            for (ReceivingStastistics receiving : receivingStastistics)
            {
                if (receiving.receivingHeader != null)
                {
                    Assert.assertTrue(receiving.receivingHeader.bytesTotal >= receiving.receivingTables.stream().map(table -> table.receivedSoFar).reduce(Long::sum).orElse(0L));
                    Assert.assertEquals(receiving.receivingHeader.bytesTotalSoFar, (long) receiving.receivingTables.stream().map(table -> table.receivedSoFar).reduce(Long::sum).orElse(0L));
                }
            }
        }

