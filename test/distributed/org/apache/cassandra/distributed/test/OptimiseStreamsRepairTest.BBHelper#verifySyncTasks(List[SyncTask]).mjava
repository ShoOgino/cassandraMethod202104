        private static void verifySyncTasks(List<SyncTask> tasks) throws UnknownHostException
        {
            Map<InetAddressAndPort, Map<InetAddressAndPort, List<Range<Token>>>> fetching = new HashMap<>();
            for (SyncTask task : tasks)
            {
                if (task instanceof LocalSyncTask)
                {
                    assertFalse(((LocalSyncTask)task).transferRanges);
                    assertTrue(((LocalSyncTask)task).requestRanges);
                }
                else
                    assertTrue(task instanceof AsymmetricRemoteSyncTask);

                Map<InetAddressAndPort, List<Range<Token>>> fetch = fetching.computeIfAbsent(task.nodePair().coordinator, k -> new HashMap<>());
                fetch.computeIfAbsent(task.nodePair().peer, k -> new ArrayList<>()).addAll(task.rangesToSync);
            }
            // 127.0.0.2 is the node out of sync - make sure it does not receive multiple copies of the same range from the other nodes;
            Map<InetAddressAndPort, List<Range<Token>>> node2 = fetching.get(InetAddressAndPort.getByName("127.0.0.2"));
            Set<Range<Token>> allRanges = new HashSet<>();
            node2.values().forEach(ranges -> ranges.forEach(r -> assertTrue(allRanges.add(r))));

            // 127.0.0.2 should stream the same ranges to .1 and .3
            Set<Range<Token>> node2ToNode1 = new HashSet<>(fetching.get(InetAddressAndPort.getByName("127.0.0.1")).get(InetAddressAndPort.getByName("127.0.0.2")));
            Set<Range<Token>> node2ToNode3 = new HashSet<>(fetching.get(InetAddressAndPort.getByName("127.0.0.3")).get(InetAddressAndPort.getByName("127.0.0.2")));
            assertEquals(node2ToNode1, allRanges);
            assertEquals(node2ToNode3, allRanges);
        }

