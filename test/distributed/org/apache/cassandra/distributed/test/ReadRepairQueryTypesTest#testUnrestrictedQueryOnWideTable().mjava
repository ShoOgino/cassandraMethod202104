    /**
     * Test queries without restrictions on a table with clustering columns.
     */
    @Test
    public void testUnrestrictedQueryOnWideTable()
    {
        tester("")
        .createTable("CREATE TABLE %s (k int, c int, a int, b int, PRIMARY KEY(k, c))")
        .mutate("INSERT INTO %s (k, c, a, b) VALUES (1, 10, 100, 1000)",
                "INSERT INTO %s (k, c, a, b) VALUES (1, 20, 200, 2000)",
                "INSERT INTO %s (k, c, a, b) VALUES (2, 30, 300, 3000)")
        .queryColumns("a", paging ? 3 : 2, paging ? 3 : 2,
                      rows(row(100), row(200), row(300)),
                      rows(row(1, 10, 100, 1000), row(1, 20, 200, 2000), row(2, 30, 300, 3000)),
                      rows(row(1, 10, 100, null), row(1, 20, 200, null), row(2, 30, 300, null)))
        .deleteColumn("DELETE a FROM %s WHERE k=1 AND c=20", "b", 0, 1,
                      rows(row(1000), row(2000), row(3000)),
                      rows(row(1, 10, 100, 1000), row(1, 20, null, 2000), row(2, 30, 300, 3000)),
                      rows(row(1, 10, 100, 1000), row(1, 20, 200, 2000), row(2, 30, 300, 3000)))
        .deleteRows("DELETE FROM %s WHERE k=1 AND c=20", 1,
                    rows(row(1, 10, 100, 1000), row(2, 30, 300, 3000)),
                    rows(row(1, 10, 100, 1000), row(1, 20, null, 2000), row(2, 30, 300, 3000)))
        .deleteRows("DELETE FROM %s WHERE k=1", 1,
                    rows(row(2, 30, 300, 3000)),
                    rows(row(1, 10, 100, 1000), row(2, 30, 300, 3000)))
        .tearDown(0,
                  rows(row(2, 30, 300, 3000)),
                  rows(row(2, 30, 300, 3000)));
    }

