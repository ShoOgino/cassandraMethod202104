    @Test
    public void testMaybeChangeDocs()
    {
        // If you added, modified options or help, please update docs if necessary

        ToolResult tool = ToolRunner.invokeNodetoolJvmDtest(cluster.get(1), "help", "disablebinary");
        String help =   "NAME\n" + 
                        "        nodetool disablebinary - Disable native transport (binary protocol)\n" + 
                        "\n" + 
                        "SYNOPSIS\n" + 
                        "        nodetool [(-h <host> | --host <host>)] [(-p <port> | --port <port>)]\n" + 
                        "                [(-pp | --print-port)] [(-pw <password> | --password <password>)]\n" + 
                        "                [(-pwf <passwordFilePath> | --password-file <passwordFilePath>)]\n" + 
                        "                [(-u <username> | --username <username>)] disablebinary\n" + 
                        "\n" + 
                        "OPTIONS\n" + 
                        "        -h <host>, --host <host>\n" + 
                        "            Node hostname or ip address\n" + 
                        "\n" + 
                        "        -p <port>, --port <port>\n" + 
                        "            Remote jmx agent port number\n" + 
                        "\n" + 
                        "        -pp, --print-port\n" + 
                        "            Operate in 4.0 mode with hosts disambiguated by port number\n" + 
                        "\n" + 
                        "        -pw <password>, --password <password>\n" + 
                        "            Remote jmx agent password\n" + 
                        "\n" + 
                        "        -pwf <passwordFilePath>, --password-file <passwordFilePath>\n" + 
                        "            Path to the JMX password file\n" + 
                        "\n" + 
                        "        -u <username>, --username <username>\n" + 
                        "            Remote jmx agent username\n" + 
                        "\n" + 
                        "\n";
        Assertions.assertThat(tool.getStdout()).isEqualTo(help);

        tool = ToolRunner.invokeNodetoolJvmDtest(cluster.get(1), "help", "enablebinary");
        help =  "NAME\n" + 
                "        nodetool enablebinary - Reenable native transport (binary protocol)\n" + 
                "\n" + 
                "SYNOPSIS\n" + 
                "        nodetool [(-h <host> | --host <host>)] [(-p <port> | --port <port>)]\n" + 
                "                [(-pp | --print-port)] [(-pw <password> | --password <password>)]\n" + 
                "                [(-pwf <passwordFilePath> | --password-file <passwordFilePath>)]\n" + 
                "                [(-u <username> | --username <username>)] enablebinary\n" + 
                "\n" + 
                "OPTIONS\n" + 
                "        -h <host>, --host <host>\n" + 
                "            Node hostname or ip address\n" + 
                "\n" + 
                "        -p <port>, --port <port>\n" + 
                "            Remote jmx agent port number\n" + 
                "\n" + 
                "        -pp, --print-port\n" + 
                "            Operate in 4.0 mode with hosts disambiguated by port number\n" + 
                "\n" + 
                "        -pw <password>, --password <password>\n" + 
                "            Remote jmx agent password\n" + 
                "\n" + 
                "        -pwf <passwordFilePath>, --password-file <passwordFilePath>\n" + 
                "            Path to the JMX password file\n" + 
                "\n" + 
                "        -u <username>, --username <username>\n" + 
                "            Remote jmx agent username\n" + 
                "\n" + 
                "\n";
        Assertions.assertThat(tool.getStdout()).isEqualTo(help);
    }

