    /**
     * Test range queries without restrictions but with a limit on a table without clustering columns.
     */
    @Test
    public void testRangeQueryWithLimitOnSkinnyTable()
    {
        tester("WHERE token(k) >= token(1) LIMIT 2")
        .createTable("CREATE TABLE %s (k int PRIMARY KEY, a int, b int)")
        .mutate("INSERT INTO %s (k, a, b) VALUES (1, 10, 100)",
                "INSERT INTO %s (k, a, b) VALUES (2, 20, 200)",
                "INSERT INTO %s (k, a, b) VALUES (3, 30, 300)")
        .queryColumns("a", 2, 2,
                      rows(row(10), row(20)),
                      rows(row(1, 10, 100), row(2, 20, 200)),
                      rows(row(1, 10, null), row(2, 20, null)))
        .deleteColumn("DELETE a FROM %s WHERE k=2", "b", 0, 1,
                      rows(row(100), row(200)),
                      rows(row(1, 10, 100), row(2, null, 200)),
                      rows(row(1, 10, 100), row(2, 20, 200)))
        .deleteRows("DELETE FROM %s WHERE k=1", 2,
                    rows(row(2, null, 200), row(3, 30, 300)),
                    rows(row(1, 10, 100), row(2, null, 200)))
        .tearDown(0,
                  rows(row(2, null, 200), row(3, 30, 300)),
                  rows(row(2, null, 200), row(3, 30, 300)));
    }

