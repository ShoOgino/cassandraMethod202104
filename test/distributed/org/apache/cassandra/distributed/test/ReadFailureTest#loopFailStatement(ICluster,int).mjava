    private void loopFailStatement(ICluster cluster, int iterations)
    {
        final String query = String.format("SELECT k FROM %s.t WHERE k=%d", KEYSPACE, TOMBSTONE_FAIL_KEY);
        for (int i = 0; i < iterations; ++i)
        {
            try
            {
                cluster.coordinator(1).execute(query, ConsistencyLevel.ONE);
                fail("Request did not throw a ReadFailureException as expected.");
            }
            catch (Throwable t) // Throwable because the raised ReadFailure is loaded from a different classloader and doesn't match "ours"
            {
                String onFail = String.format("Did not receive expected ReadFailureException. Instead caught %s\n%s",
                                              t, ExceptionUtils.getStackTrace(t));
                assertNotNull(onFail, t.getMessage());
                assertTrue(onFail, t.getMessage().contains(RequestFailureReason.READ_TOO_MANY_TOMBSTONES.name()));
            }
        }
    }

